<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.miaoyou.platform.server.mapper.SmstypetbMapper" >
  <cache />
  <resultMap id="BaseResultMap" type="com.miaoyou.platform.server.entity.Smstypetb" >
    <id column="smstype_id" property="smstypeId" jdbcType="BIGINT" />
    <result column="smstype_name" property="smstypeName" jdbcType="VARCHAR" />
    <result column="zujima" property="zujima" jdbcType="VARCHAR" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="createperson" property="createperson" jdbcType="VARCHAR" />
    <result column="updatedate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="updateperson" property="updateperson" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    smstype_id, smstype_name, zujima, delete_flag, createdate, createperson, updatedate, 
    updateperson
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.miaoyou.platform.server.entity.SmstypetbExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from smstypetb
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupby != null" >
      group by ${groupby}
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from smstypetb
    where smstype_id = #{smstypeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from smstypetb
    where smstype_id = #{smstypeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.miaoyou.platform.server.entity.SmstypetbExample" >
    delete from smstypetb
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.miaoyou.platform.server.entity.Smstypetb" >
    insert into smstypetb (smstype_id, smstype_name, zujima, 
      delete_flag, createdate, createperson, 
      updatedate, updateperson)
    values (#{smstypeId,jdbcType=BIGINT}, #{smstypeName,jdbcType=VARCHAR}, #{zujima,jdbcType=VARCHAR}, 
      #{deleteFlag,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, #{createperson,jdbcType=VARCHAR}, 
      #{updatedate,jdbcType=TIMESTAMP}, #{updateperson,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.miaoyou.platform.server.entity.Smstypetb" >
    insert into smstypetb
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="smstypeId != null" >
        smstype_id,
      </if>
      <if test="smstypeName != null" >
        smstype_name,
      </if>
      <if test="zujima != null" >
        zujima,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="createperson != null" >
        createperson,
      </if>
      <if test="updatedate != null" >
        updatedate,
      </if>
      <if test="updateperson != null" >
        updateperson,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="smstypeId != null" >
        #{smstypeId,jdbcType=BIGINT},
      </if>
      <if test="smstypeName != null" >
        #{smstypeName,jdbcType=VARCHAR},
      </if>
      <if test="zujima != null" >
        #{zujima,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createperson != null" >
        #{createperson,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateperson != null" >
        #{updateperson,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.miaoyou.platform.server.entity.SmstypetbExample" resultType="java.lang.Integer" >
    select count(*) from smstypetb
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update smstypetb
    <set >
      <if test="record.smstypeId != null" >
        smstype_id = #{record.smstypeId,jdbcType=BIGINT},
      </if>
      <if test="record.smstypeName != null" >
        smstype_name = #{record.smstypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.zujima != null" >
        zujima = #{record.zujima,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createperson != null" >
        createperson = #{record.createperson,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedate != null" >
        updatedate = #{record.updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateperson != null" >
        updateperson = #{record.updateperson,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update smstypetb
    set smstype_id = #{record.smstypeId,jdbcType=BIGINT},
      smstype_name = #{record.smstypeName,jdbcType=VARCHAR},
      zujima = #{record.zujima,jdbcType=VARCHAR},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      createperson = #{record.createperson,jdbcType=VARCHAR},
      updatedate = #{record.updatedate,jdbcType=TIMESTAMP},
      updateperson = #{record.updateperson,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.miaoyou.platform.server.entity.Smstypetb" >
    update smstypetb
    <set >
      <if test="smstypeName != null" >
        smstype_name = #{smstypeName,jdbcType=VARCHAR},
      </if>
      <if test="zujima != null" >
        zujima = #{zujima,jdbcType=VARCHAR},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="createperson != null" >
        createperson = #{createperson,jdbcType=VARCHAR},
      </if>
      <if test="updatedate != null" >
        updatedate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateperson != null" >
        updateperson = #{updateperson,jdbcType=VARCHAR},
      </if>
    </set>
    where smstype_id = #{smstypeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.miaoyou.platform.server.entity.Smstypetb" >
    update smstypetb
    set smstype_name = #{smstypeName,jdbcType=VARCHAR},
      zujima = #{zujima,jdbcType=VARCHAR},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      createperson = #{createperson,jdbcType=VARCHAR},
      updatedate = #{updatedate,jdbcType=TIMESTAMP},
      updateperson = #{updateperson,jdbcType=VARCHAR}
    where smstype_id = #{smstypeId,jdbcType=BIGINT}
  </update>
</mapper>